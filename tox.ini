[tox]

envlist =
    flake8, mypy, twistedchecker-diff

    # Twisted 13-14 require Python 2.
    coverage-py{27,py}-tw{130,140}

    # Twisted 15.5 is the first version to support Python 3 (3.3+)
    coverage-py{27,py,33,34,35,36}-tw{155,166,current,trunk}

    docs, docs-linkcheck



##
# Build (default environment)
##

[testenv]


basepython =
    pypy: pypy
    py27: python2.7
    py33: python3.3
    py34: python3.4
    py35: python3.5
    py36: python3.6


deps =
    tw130: Twisted==13.0
    tw131: Twisted==13.1
    tw132: Twisted==13.2
    tw140: Twisted==14.0.2
    tw150: Twisted==15.0
    tw151: Twisted==15.1
    tw152: Twisted==15.2
    tw153: Twisted==15.3
    tw154: Twisted==15.4
    tw155: Twisted==15.5
    tw160: Twisted==16.0
    tw161: Twisted==16.1
    tw162: Twisted==16.2
    tw163: Twisted==16.3
    tw164: Twisted==16.4
    tw165: Twisted==16.5
    tw166: Twisted==16.6
    twcurrent: Twisted
    twtrunk: https://github.com/twisted/twisted/archive/trunk.zip

    {trial,coverage}: hypothesis
    {trial,coverage}: mock

    coverage: coverage


whitelist_externals =
    coverage: cp


passenv =
    PATH
    LANG
    PYTHON_*
    CI CONTINUOUS_INTEGRATION TRAVIS TRAVIS_*
    _system_*
    CODECOV_OPTIONS


setenv =
    PIP_DISABLE_PIP_VERSION_CHECK=1
    VIRTUAL_ENV_DISABLE_PROMPT=true
    GIT_ASKPASS=echo
    HYPOTHESIS_VERBOSITY_LEVEL=normal

    coverage: COVERAGE_FILE={toxworkdir}/log/coverage.{envname}
    {coverage_combine,codecov}: COVERAGE_FILE={toxworkdir}/log/coverage

    {coverage,coverage_combine}: COVERAGE_HTML={envlogdir}/coverage_report_html
    {coverage,coverage_combine,codecov}: COVERAGE_XML={envlogdir}/coverage_report.xml

    coverage: COVERAGE_PROCESS_START={toxinidir}/.coveragerc


commands =
    "{toxinidir}/.travis/environment"

    # Run trial without coverage
    trial: trial --random=0 --logfile="{envlogdir}/trial.log" --temp-directory="{envlogdir}/trial.d" {posargs:klein}

    # Copy this PTH file to site-packages in coverage test environments so that coverage runs
    # See: http://coverage.readthedocs.io/en/coverage-4.2/subprocess.html?highlight=COVERAGE_PROCESS_START#measuring-sub-processes
    coverage: "{envpython}" -c 'with open("{envsitepackagesdir}/zz_coverage.pth", "w") as f: f.write("import coverage\ncoverage.process_startup()\n")'
    coverage: coverage run --rcfile="{toxinidir}/.coveragerc" -m twisted.trial --random=0 --logfile="{envlogdir}/trial.log" --temp-directory="{envlogdir}/trial.d" {posargs:klein}

    # Copy aside coverage data for each test environment in case we want to look at it later
    coverage: cp "{env:COVERAGE_FILE}" "{envlogdir}/coverage"

    # Run coverage reports, ignore exit status
    coverage: - coverage html --rcfile="{toxinidir}/.coveragerc" -d "{env:COVERAGE_HTML}"
    coverage: - coverage xml --rcfile="{toxinidir}/.coveragerc" -o "{env:COVERAGE_XML}"
    coverage: - coverage report --rcfile="{toxinidir}/.coveragerc" --skip-covered --omit "*/test/*"



##
# Flake8 linting
##

[testenv:flake8]

basepython = python3.5

skip_install = True

deps =
    flake8
    flake8-bugbear
    flake8_docstrings
    flake8-import-order
    flake8-pep3101
    pep8-naming
    mccabe

commands =
    "{toxinidir}/.travis/environment"

    flake8 {posargs:src/klein}


[flake8]

disable-noqa = True
show-source  = True
doctests     = True

# Codes: http://flake8.pycqa.org/en/latest/user/error-codes.html
ignore =
    # multiple spaces before operator
    E221,
    # too many blank lines
    E302,
    # too many blank lines
    E303,
    # function name should be lowercase
    N802,
    # argument name should be lowercase
    N803,
    # variable in function should be lowercase
    N806,

# flake8-import-order: local module name space
application-import-names = klein

# McCabe complexity checker
max-complexity = 21



##
# Mypy linting
##

[testenv:mypy]

basepython = python3.5

skip_install = True


deps =
    mypy


commands =
    "{toxinidir}/.travis/environment"

    "{toxinidir}/.travis/mypy" --config-file="{toxinidir}/tox.ini" {posargs:src}


[mypy]

# Global settings

warn_redundant_casts = True
warn_unused_ignores = True
strict_optional = True
show_column_numbers = True

# Module default settings
# disallow_untyped_calls = True
disallow_untyped_defs = True
# warn_return_any = True

# Need some stub files to get rid of this
ignore_missing_imports = True



##
# Run twistedchecker
##

[testenv:twistedchecker]

deps = twistedchecker

basepython = python2.7

commands =
    "{toxinidir}/.travis/environment"

    twistedchecker {posargs:klein}



##
# Run twistedchecker on changes relative to master
##

[testenv:twistedchecker-diff]

deps =
    {[testenv:twistedchecker]deps}
    diff_cover

basepython = python2.7

commands =
    "{toxinidir}/.travis/environment"

    {toxinidir}/.travis/twistedchecker-diff {posargs:klein}



##
# Combine coverage reports
##

[testenv:coverage_combine]

basepython = python3.5

skip_install = True

deps = coverage


whitelist_externals =
    cp


commands =
    "{toxinidir}/.travis/environment"

    coverage combine --append

    # Copy aside coverage data for each test environment in case we want to look at it later
    cp "{env:COVERAGE_FILE}" "{envlogdir}/coverage"

    # Run coverage reports, ignore exit status
    - coverage html --rcfile="{toxinidir}/.coveragerc" -d "{env:COVERAGE_HTML}"
    - coverage xml --rcfile="{toxinidir}/.coveragerc" -o "{env:COVERAGE_XML}"

    # Don't ignore exit status here; this is our failure status if coverage is insufficient.
    coverage report --rcfile="{toxinidir}/.coveragerc"



##
# Publish to Codecov
##

[testenv:codecov]

basepython = python

skip_install = True

deps = codecov


commands =
    "{toxinidir}/.travis/environment"

    coverage combine --append

    # Generate XML and publish to codecov.io
    # Ignore errors generating coverage XML, which may be due to < 100% coverage; we still want to publish
    - coverage xml --rcfile="{toxinidir}/.coveragerc" -o "{env:COVERAGE_XML}"
    codecov --required --file="{env:COVERAGE_XML}" {env:CODECOV_OPTIONS:}



##
# Build the documentation
##

[testenv:docs]

basepython = python3.5

deps =
    sphinx
    sphinx_rtd_theme

commands =
    "{toxinidir}/.travis/environment"

    sphinx-build -b html -d "{envtmpdir}/doctrees" docs docs/_build/html



##
# Check for broken links in documentation
##

[testenv:docs-linkcheck]

basepython = python3.5

deps = {[testenv:docs]deps}

commands =
    "{toxinidir}/.travis/environment"

    sphinx-build -b html -d "{envtmpdir}/doctrees" docs docs/_build/html
    sphinx-build -b linkcheck docs docs/_build/html
